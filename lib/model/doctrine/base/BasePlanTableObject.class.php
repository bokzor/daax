<?php

/**
 * BasePlanTableObject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property boolean $visible
 * @property integer $width
 * @property integer $height
 * @property integer $rotation
 * @property string $statut
 * @property integer $plantable_id
 * @property integer $x
 * @property integer $y
 * @property boolean $locked
 * @property integer $zindex
 * @property integer $image_id
 * @property boolean $elipse
 * @property integer $image_chair_id
 * @property PlanTableImage $ObjectImage
 * @property PlanTableImage $ObjectChairImage
 * @property PlanTable $PlanTableObject
 * 
 * @method string          getName()             Returns the current record's "name" value
 * @method string          getDescription()      Returns the current record's "description" value
 * @method boolean         getVisible()          Returns the current record's "visible" value
 * @method integer         getWidth()            Returns the current record's "width" value
 * @method integer         getHeight()           Returns the current record's "height" value
 * @method integer         getRotation()         Returns the current record's "rotation" value
 * @method string          getStatut()           Returns the current record's "statut" value
 * @method integer         getPlantableId()      Returns the current record's "plantable_id" value
 * @method integer         getX()                Returns the current record's "x" value
 * @method integer         getY()                Returns the current record's "y" value
 * @method boolean         getLocked()           Returns the current record's "locked" value
 * @method integer         getZindex()           Returns the current record's "zindex" value
 * @method integer         getImageId()          Returns the current record's "image_id" value
 * @method boolean         getElipse()           Returns the current record's "elipse" value
 * @method integer         getImageChairId()     Returns the current record's "image_chair_id" value
 * @method PlanTableImage  getObjectImage()      Returns the current record's "ObjectImage" value
 * @method PlanTableImage  getObjectChairImage() Returns the current record's "ObjectChairImage" value
 * @method PlanTable       getPlanTableObject()  Returns the current record's "PlanTableObject" value
 * @method PlanTableObject setName()             Sets the current record's "name" value
 * @method PlanTableObject setDescription()      Sets the current record's "description" value
 * @method PlanTableObject setVisible()          Sets the current record's "visible" value
 * @method PlanTableObject setWidth()            Sets the current record's "width" value
 * @method PlanTableObject setHeight()           Sets the current record's "height" value
 * @method PlanTableObject setRotation()         Sets the current record's "rotation" value
 * @method PlanTableObject setStatut()           Sets the current record's "statut" value
 * @method PlanTableObject setPlantableId()      Sets the current record's "plantable_id" value
 * @method PlanTableObject setX()                Sets the current record's "x" value
 * @method PlanTableObject setY()                Sets the current record's "y" value
 * @method PlanTableObject setLocked()           Sets the current record's "locked" value
 * @method PlanTableObject setZindex()           Sets the current record's "zindex" value
 * @method PlanTableObject setImageId()          Sets the current record's "image_id" value
 * @method PlanTableObject setElipse()           Sets the current record's "elipse" value
 * @method PlanTableObject setImageChairId()     Sets the current record's "image_chair_id" value
 * @method PlanTableObject setObjectImage()      Sets the current record's "ObjectImage" value
 * @method PlanTableObject setObjectChairImage() Sets the current record's "ObjectChairImage" value
 * @method PlanTableObject setPlanTableObject()  Sets the current record's "PlanTableObject" value
 * 
 * @package    LiveOrder
 * @subpackage model
 * @author     Adrien Bokor <adrien@bokor.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlanTableObject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('plan_table_object');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('width', 'integer', null, array(
             'type' => 'integer',
             'default' => 1024,
             ));
        $this->hasColumn('height', 'integer', null, array(
             'type' => 'integer',
             'default' => 689,
             ));
        $this->hasColumn('rotation', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('statut', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('plantable_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('x', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('y', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('locked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('zindex', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('image_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('elipse', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('image_chair_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PlanTableImage as ObjectImage', array(
             'local' => 'image_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PlanTableImage as ObjectChairImage', array(
             'local' => 'image_chair_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PlanTable as PlanTableObject', array(
             'local' => 'plantable_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}