<?php

/**
 * BaseArticleCommande
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $article_id
 * @property integer $commande_id
 * @property integer $count
 * @property float $prix
 * @property string $comment
 * @property Article $Article
 * @property Commande $Commande
 * @property Doctrine_Collection $Supplements
 * @property Doctrine_Collection $ArticleSupplement
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getArticleId()         Returns the current record's "article_id" value
 * @method integer             getCommandeId()        Returns the current record's "commande_id" value
 * @method integer             getCount()             Returns the current record's "count" value
 * @method float               getPrix()              Returns the current record's "prix" value
 * @method string              getComment()           Returns the current record's "comment" value
 * @method Article             getArticle()           Returns the current record's "Article" value
 * @method Commande            getCommande()          Returns the current record's "Commande" value
 * @method Doctrine_Collection getSupplements()       Returns the current record's "Supplements" collection
 * @method Doctrine_Collection getArticleSupplement() Returns the current record's "ArticleSupplement" collection
 * @method ArticleCommande     setId()                Sets the current record's "id" value
 * @method ArticleCommande     setArticleId()         Sets the current record's "article_id" value
 * @method ArticleCommande     setCommandeId()        Sets the current record's "commande_id" value
 * @method ArticleCommande     setCount()             Sets the current record's "count" value
 * @method ArticleCommande     setPrix()              Sets the current record's "prix" value
 * @method ArticleCommande     setComment()           Sets the current record's "comment" value
 * @method ArticleCommande     setArticle()           Sets the current record's "Article" value
 * @method ArticleCommande     setCommande()          Sets the current record's "Commande" value
 * @method ArticleCommande     setSupplements()       Sets the current record's "Supplements" collection
 * @method ArticleCommande     setArticleSupplement() Sets the current record's "ArticleSupplement" collection
 * 
 * @package    LiveOrder
 * @subpackage model
 * @author     Adrien Bokor <adrien@bokor.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticleCommande extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article_commande');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('article_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('commande_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('count', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('prix', 'float', null, array(
             'type' => 'float',
             'default' => 0,
             ));
        $this->hasColumn('comment', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Article', array(
             'local' => 'article_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Commande', array(
             'local' => 'commande_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Supplement as Supplements', array(
             'refClass' => 'ArticleCommandeSupplement',
             'local' => 'article_commande_id',
             'foreign' => 'supplement_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ArticleCommandeSupplement as ArticleSupplement', array(
             'local' => 'id',
             'foreign' => 'article_commande_id'));
    }
}