<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $img
 * @property integer $father_id
 * @property boolean $is_publish
 * @property Doctrine_Collection $Imprimantes
 * @property Doctrine_Collection $Element
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $Supplement
 * @property Doctrine_Collection $CategoryImprimante
 * 
 * @method string              getName()               Returns the current record's "name" value
 * @method string              getImg()                Returns the current record's "img" value
 * @method integer             getFatherId()           Returns the current record's "father_id" value
 * @method boolean             getIsPublish()          Returns the current record's "is_publish" value
 * @method Doctrine_Collection getImprimantes()        Returns the current record's "Imprimantes" collection
 * @method Doctrine_Collection getElement()            Returns the current record's "Element" collection
 * @method Doctrine_Collection getArticle()            Returns the current record's "Article" collection
 * @method Doctrine_Collection getSupplement()         Returns the current record's "Supplement" collection
 * @method Doctrine_Collection getCategoryImprimante() Returns the current record's "CategoryImprimante" collection
 * @method Category            setName()               Sets the current record's "name" value
 * @method Category            setImg()                Sets the current record's "img" value
 * @method Category            setFatherId()           Sets the current record's "father_id" value
 * @method Category            setIsPublish()          Sets the current record's "is_publish" value
 * @method Category            setImprimantes()        Sets the current record's "Imprimantes" collection
 * @method Category            setElement()            Sets the current record's "Element" collection
 * @method Category            setArticle()            Sets the current record's "Article" collection
 * @method Category            setSupplement()         Sets the current record's "Supplement" collection
 * @method Category            setCategoryImprimante() Sets the current record's "CategoryImprimante" collection
 * 
 * @package    LiveOrder
 * @subpackage model
 * @author     Adrien Bokor <adrien@bokor.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 100,
             ));
        $this->hasColumn('img', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'default.jpg',
             'length' => 255,
             ));
        $this->hasColumn('father_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_publish', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Imprimante as Imprimantes', array(
             'refClass' => 'CategoryImprimante',
             'local' => 'category_id',
             'foreign' => 'imprimante_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Element', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('Article', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('Supplement', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('CategoryImprimante', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($sluggable0);
        $this->actAs($nestedset0);
    }
}