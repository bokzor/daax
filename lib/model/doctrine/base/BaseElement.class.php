<?php

/**
 * BaseElement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $img
 * @property boolean $is_publish
 * @property integer $category_id
 * @property float $stock_minimum
 * @property float $stock_actuel
 * @property integer $conditionnement_id
 * @property integer $fournisseur_id
 * @property float $nombre_unite
 * @property float $prix_achat
 * @property string $reference
 * @property Category $Category
 * @property Fournisseur $Fournisseur
 * @property Conditionnement $Conditionnement
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $ArticleElement
 * 
 * @method string              getName()               Returns the current record's "name" value
 * @method string              getImg()                Returns the current record's "img" value
 * @method boolean             getIsPublish()          Returns the current record's "is_publish" value
 * @method integer             getCategoryId()         Returns the current record's "category_id" value
 * @method float               getStockMinimum()       Returns the current record's "stock_minimum" value
 * @method float               getStockActuel()        Returns the current record's "stock_actuel" value
 * @method integer             getConditionnementId()  Returns the current record's "conditionnement_id" value
 * @method integer             getFournisseurId()      Returns the current record's "fournisseur_id" value
 * @method float               getNombreUnite()        Returns the current record's "nombre_unite" value
 * @method float               getPrixAchat()          Returns the current record's "prix_achat" value
 * @method string              getReference()          Returns the current record's "reference" value
 * @method Category            getCategory()           Returns the current record's "Category" value
 * @method Fournisseur         getFournisseur()        Returns the current record's "Fournisseur" value
 * @method Conditionnement     getConditionnement()    Returns the current record's "Conditionnement" value
 * @method Doctrine_Collection getArticle()            Returns the current record's "Article" collection
 * @method Doctrine_Collection getArticleElement()     Returns the current record's "ArticleElement" collection
 * @method Element             setName()               Sets the current record's "name" value
 * @method Element             setImg()                Sets the current record's "img" value
 * @method Element             setIsPublish()          Sets the current record's "is_publish" value
 * @method Element             setCategoryId()         Sets the current record's "category_id" value
 * @method Element             setStockMinimum()       Sets the current record's "stock_minimum" value
 * @method Element             setStockActuel()        Sets the current record's "stock_actuel" value
 * @method Element             setConditionnementId()  Sets the current record's "conditionnement_id" value
 * @method Element             setFournisseurId()      Sets the current record's "fournisseur_id" value
 * @method Element             setNombreUnite()        Sets the current record's "nombre_unite" value
 * @method Element             setPrixAchat()          Sets the current record's "prix_achat" value
 * @method Element             setReference()          Sets the current record's "reference" value
 * @method Element             setCategory()           Sets the current record's "Category" value
 * @method Element             setFournisseur()        Sets the current record's "Fournisseur" value
 * @method Element             setConditionnement()    Sets the current record's "Conditionnement" value
 * @method Element             setArticle()            Sets the current record's "Article" collection
 * @method Element             setArticleElement()     Sets the current record's "ArticleElement" collection
 * 
 * @package    LiveOrder
 * @subpackage model
 * @author     Adrien Bokor <adrien@bokor.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseElement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('element');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('img', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'default.jpg',
             'length' => 255,
             ));
        $this->hasColumn('is_publish', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('stock_minimum', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('stock_actuel', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('conditionnement_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('fournisseur_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('nombre_unite', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('prix_achat', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('reference', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Fournisseur', array(
             'local' => 'fournisseur_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Conditionnement', array(
             'local' => 'conditionnement_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Article', array(
             'refClass' => 'ArticleElement',
             'local' => 'element_id',
             'foreign' => 'article_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ArticleElement', array(
             'local' => 'id',
             'foreign' => 'element_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}