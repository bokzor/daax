<?php

/**
 * BaseImprimante
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property boolean $facture
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $CategoryImprimante
 * 
 * @method string              getName()               Returns the current record's "name" value
 * @method string              getDescription()        Returns the current record's "description" value
 * @method boolean             getFacture()            Returns the current record's "facture" value
 * @method Doctrine_Collection getCategory()           Returns the current record's "Category" collection
 * @method Doctrine_Collection getCategoryImprimante() Returns the current record's "CategoryImprimante" collection
 * @method Imprimante          setName()               Sets the current record's "name" value
 * @method Imprimante          setDescription()        Sets the current record's "description" value
 * @method Imprimante          setFacture()            Sets the current record's "facture" value
 * @method Imprimante          setCategory()           Sets the current record's "Category" collection
 * @method Imprimante          setCategoryImprimante() Sets the current record's "CategoryImprimante" collection
 * 
 * @package    LiveOrder
 * @subpackage model
 * @author     Adrien Bokor <adrien@bokor.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseImprimante extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('imprimante');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('facture', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Category', array(
             'refClass' => 'CategoryImprimante',
             'local' => 'imprimante_id',
             'foreign' => 'category_id'));

        $this->hasMany('CategoryImprimante', array(
             'local' => 'id',
             'foreign' => 'imprimante_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($sluggable0);
    }
}