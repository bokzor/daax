<?php

/**
 * BaseArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $img
 * @property boolean $is_publish
 * @property integer $category_id
 * @property float $prix
 * @property string $description
 * @property integer $temps_prepa
 * @property integer $count
 * @property Category $Category
 * @property Doctrine_Collection $Commande
 * @property Doctrine_Collection $Elements
 * @property Doctrine_Collection $ArticleCommande
 * @property Doctrine_Collection $ArticleElement
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getImg()             Returns the current record's "img" value
 * @method boolean             getIsPublish()       Returns the current record's "is_publish" value
 * @method integer             getCategoryId()      Returns the current record's "category_id" value
 * @method float               getPrix()            Returns the current record's "prix" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method integer             getTempsPrepa()      Returns the current record's "temps_prepa" value
 * @method integer             getCount()           Returns the current record's "count" value
 * @method Category            getCategory()        Returns the current record's "Category" value
 * @method Doctrine_Collection getCommande()        Returns the current record's "Commande" collection
 * @method Doctrine_Collection getElements()        Returns the current record's "Elements" collection
 * @method Doctrine_Collection getArticleCommande() Returns the current record's "ArticleCommande" collection
 * @method Doctrine_Collection getArticleElement()  Returns the current record's "ArticleElement" collection
 * @method Article             setName()            Sets the current record's "name" value
 * @method Article             setImg()             Sets the current record's "img" value
 * @method Article             setIsPublish()       Sets the current record's "is_publish" value
 * @method Article             setCategoryId()      Sets the current record's "category_id" value
 * @method Article             setPrix()            Sets the current record's "prix" value
 * @method Article             setDescription()     Sets the current record's "description" value
 * @method Article             setTempsPrepa()      Sets the current record's "temps_prepa" value
 * @method Article             setCount()           Sets the current record's "count" value
 * @method Article             setCategory()        Sets the current record's "Category" value
 * @method Article             setCommande()        Sets the current record's "Commande" collection
 * @method Article             setElements()        Sets the current record's "Elements" collection
 * @method Article             setArticleCommande() Sets the current record's "ArticleCommande" collection
 * @method Article             setArticleElement()  Sets the current record's "ArticleElement" collection
 * 
 * @package    LiveOrder
 * @subpackage model
 * @author     Adrien Bokor <adrien@bokor.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('img', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'default.jpg',
             'length' => 255,
             ));
        $this->hasColumn('is_publish', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('prix', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('description', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('temps_prepa', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('count', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Commande', array(
             'refClass' => 'ArticleCommande',
             'local' => 'article_id',
             'foreign' => 'commande_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Element as Elements', array(
             'refClass' => 'ArticleElement',
             'local' => 'article_id',
             'foreign' => 'element_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ArticleCommande', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('ArticleElement', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}