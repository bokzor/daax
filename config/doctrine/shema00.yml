Element:
  actAs:
    Timestampable:
    Sluggable:
      fields: [name]
  columns:
    name:              { type: string(100), notnull: true }
    img:               { type: string(255), notnull: true, default: default.jpg }
    is_publish:        { type: boolean, notnull: true, default: 1 } 
    category_id:       { type: integer }
    stock_minimum:     { type: float }
    stock_actuel:      { type: float }
    conditionnement_id: { type: integer }
    fournisseur_id:    { type: integer, notnull: false, default: NULL }
    nombre_unite:      { type: float }
    prix_achat:        { type: float }
    reference:         { type: string(255) }
  relations:
    Category:          { onDelete: CASCADE, class: Category, local: category_id, foreign: id }
    Fournisseur:       { onDelete: CASCADE, class: Fournisseur, local: fournisseur_id, foreign: id } 
    Conditionnement:   { onDelete: CASCADE, class: Conditionnement, local: conditionnement_id, foreign: id } 
    Article:           { onDelete: CASCADE, class: Article, local: element_id, foreign: article_id, refClass: ArticleElement }


Article:
  actAs:
    Timestampable:
    Sluggable:
      fields: [name]
  columns:
    name:              { type: string(100), notnull: true }
    img:               { type: string(255), notnull: true, default: default.jpg }
    is_publish:        { type: boolean, notnull: true, default: 1 } 
    category_id:       { type: integer }
    prix:              { type: float }
    description:       { type: string(1000) }
    temps_prepa:       { type: integer }
    count:             { type: integer, default: 0 }
  relations:
    Category:          { onDelete: CASCADE, class: Category, local: category_id, foreign: id } 
    Commande:          { onDelete: CASCADE, class: Commande, local: article_id, foreign: commande_id, refClass: ArticleCommande }
    Elements:          { onDelete: CASCADE, class: Element, local: article_id, foreign: element_id, refClass: ArticleElement }

Category:
  actAs:
    Sluggable:
      fields: [name]
    NestedSet:
      hasManyRoots: true
      rootColumnName: root_id
  columns:
    name:              { type: string(100), notnull: true, unique: true }
    img:               { type: string(255), notnull: true, default: default.jpg }
    father_id:         { type: integer }
    is_publish:        { type: boolean, notnull: true, default: 1 }
  relations:
      Imprimantes:     { onDelete: CASCADE, class: Imprimante, local: category_id, foreign: imprimante_id, refClass: CategoryImprimante }

StatutCommande:
  columns:
    name:              { type: string(100), notnull: true, unique: true }
    realId:            { type: integer }

Fournisseur:
  actAs:
    Timestampable:
  columns:
    name:              { type: string(100), notnull: true, unique: true }
    tel:               { type: string(100) }

Conditionnement:
  columns:
    name:                 { type: string(255), notnull: true }



Commande:
  actAs:
    Timestampable:
  columns:
    server_id:         { type: integer, notnull: true }
    table_id:          { type: integer, notnull: true }
    client_id:         { type: integer, notnull: false }
    statut_id:         { type: integer, notnull: true, default: 0 }
    total_commande:    { type: float, default: 0.00 }
    total_prix_achat:  { type: float, default: 0.00 }
  relations:
    Server:            { class: sfGuardUser, foreignAlias: Server, local: server_id, foreign: id }
    Client:            { class: sfGuardUser, foreignAlias: Client, local: client_id, foreign: id }
    Articles:          { class: Article, foreign: article_id, local: commande_id, refClass: ArticleCommande }
    StatutCommande:    {  class: StatutCommande, local: statut_id, foreign: id }


#Chaques commande est composée de un ou plusu
ArticleCommande:
  columns:
    id:                  { type: integer, primary: true, autoincrement: true }
    article_id:          { type: integer }
    promo_id:            { type: integer } 
    commande_id:         { type: integer }
    count:               { type: integer, default: 1 }
    prix:                { type: float, default: 0.00 }
    comment:             { type: string(255) }
  relations:
    Article:             { class: Article, onDelete: CASCADE, foreign: id, local: article_id }
    Commande:            { class: Commande, onDelete: CASCADE, foreign: id, local: commande_id }
    Supplements:         { class: Supplement, onDelete: CASCADE, foreign: supplement_id, local: article_commande_id, refClass: ArticleCommandeSupplement}

ArticleCommandeSupplement:
  columns:
    article_commande_id: { type: integer, primary: true }
    supplement_id: { type: integer, primary: true }
  relations:
    ArticleCommande:
      foreignAlias: ArticleSupplement
      onDelete: CASCADE
    Supplement:
      foreignAlias: ArticleSupplement
      onDelete: CASCADE

#Chaques articles est composé de un ou plusieurs éléments
ArticleElement:
  columns:
    article_id:          { type: integer, primary: true }
    element_id:          { type: integer, primary: true }
    a_deduire:           { type: float }
  relations:
    Article:             { class: Article, onDelete: CASCADE, foreign: id, local: article_id }
    Element:             { class: Element, onDelete: CASCADE, foreign: id, local: element_id }


#Chaques transaction posséde une ou plusieurs commandes assoscié
CommandesTransaction:
  columns:
    transaction_id:      { type: integer, primary: true }
    commande_id:         { type: integer, primary: true }
  relations:
    Transaction:         { class: Transaction, onDelete: CASCADE, foreign: id, local: transaction_id } 
    Commande:            { class: Commande, onDelete: CASCADE, foreign: id, local: commande_id }

#Transaction lorsque quelqu'un credite son compte ou paye une commande
#Permet de savoir ce qu'il y a comme argent en liquide dans la caisse
Transaction:
  actAs:
    Timestampable:
  columns:
    server_id:         { type: integer, notnull: true }
    client_id:         { type: integer }
    cash:              { type: integer, default: 0 }
    cb:        { type: integer, default: 0 }
    cashback:          { type: integer, default: 0 }
    ecb:               { type: integer, default: 0 }
    statut:            { type: integer, default: 0 }
  relations:
    Server:            { class: sfGuardUser, foreignAlias: Server, local: server_id, foreign: id }
    Client:            { class: sfGuardUser, foreignAlias: Client, local: client_id, foreign: id }
    Commandes:         { onDelete: CASCADE, class: Commande, foreign: commande_id, local: transaction_id, refClass: CommandesTransaction }


#Publicite sur le ticket de caisse    
Publicite:
  actAs:
    Timestampable:
  columns:
    message:         { type: string(255), notnull: true }
    selected:        { type: boolean, default: 0 }

PlanTableImage:
  columns:
    name:              { type: string(100), notnull: true }
    img:               { type: string(255), notnull: true }
    category_id:       { type: integer, notnull: true }
  relations:
    Category:  { onDelete: CASCADE, class: PlanTableImageCategory, local: category_id, foreign: id }

PlanTableImageCategory:
  columns:
    name: { type: string(100), notnull: true }

PlanTable:
  columns:
    name: { type: string(100), notnull: true, unique: true }
    description: { type: string(1000) }
    visible: { type: boolean, default: false }
    width: { type: integer, default: 1024 }
    height: { type: integer, default: 689 }
    background_id: { type: integer }
  relations:
    PlanTableBackground:  { onDelete: CASCADE, class: PlanTableImage, local: background_id, foreign: id }


PlanTableObject:
  columns:
    name: { type: string(100), notnull: true }
    description: { type: string(1000) }
    visible: { type: boolean, default: false }
    width: { type: integer, default: 1024 }
    height: { type: integer, default: 689 }
    rotation: { type: integer }
    statut: { type: string(100) }
    plantable_id: { type: integer }
    x: { type: integer }
    y: { type: integer }
    locked: { type: boolean, default: false }
    zindex: { type: integer, default: 0 }
    image_id: { type: integer }
    elipse: { type: boolean, default: false }
    image_chair_id: { type: integer }
  relations:
    ObjectImage:  { onDelete: CASCADE, class: PlanTableImage, local: image_id, foreign: id }
    ObjectChairImage:  { onDelete: CASCADE, class: PlanTableImage, local: image_chair_id, foreign: id }
    PlanTableObject:   { onDelete: CASCADE, class: PlanTable, local: plantable_id, foreign: id } 


Cloture:
  actAs:
    Timestampable:
  columns:
    nb_transaction_cash: { type: integer, default: 0 }
    nb_transaction_cb: { type: integer, default: 0 }
    nb_transaction_ecb: { type: integer, default: 0 }
    total_transaction_cash: { type: integer, default: 0 }
    total_transaction_cb: { type: integer, default: 0 }
    total_transaction_ecb: { type: integer, default: 0 }
    id_user_record: { type: integer, default: 0, notnull: false }
    total_record: { type: integer, default: 0 }
    server_id: { type: integer, primary: false }
  relations:
    ServerRecord: { class: sfGuardUser, foreignAlias: ServerRecord, local: id_user_record, foreign: id }
    ServerCloture: { class: sfGuardUser, onDelete: CASCADE, foreignAlias: ServerCloture, local: server_id, foreign: id }

Imprimante:
  actAs:
    Sluggable:
      fields: [name]
  columns:
    name: { type: string(100), notnull: true }
    description: { type: string(255), notnull: false }
    facture: { type: boolean, default: false }

Supplement:
  actAs:
    Sluggable:
      fields: [name]
  columns:
    name: { type: string(100), notnull: true }
    fois_prix: { type: float, default: 1 }
    plus_prix: { type: float, default: 0 }
    is_publish: { type: integer, default: 1 }
    category_id: { type: integer }
    visible_user: { type: boolean, default: false }
  relations:
    ArticleCommandes:  { class: ArticleCommande, onDelete: CASCADE, foreign: article_commande_id, local: supplement_id, refClass: ArticleCommandeSupplement}
    Category:          { onDelete: CASCADE, class: Category, local: category_id, foreign: id } 


#Chaques categorie peut s'imprimer sur plusieurs imprimantes
CategoryImprimante:
  columns:
    category_id:         { type: integer, primary: true }
    imprimante_id:       { type: integer, primary: true }
  relations:
    Imprimante:          { class: Imprimante, onDelete: CASCADE, foreign: id, local: imprimante_id }
    Category:            { class: Category, onDelete: CASCADE, foreign: id, local: category_id }

GroupeReduction:
  columns:
    name: { type: string(100), notnull: true, unique: true }
    is_active: { type: boolean, default: true }

Reduction:
  columns:
    article_id: { type: integer, notnull: false }
    groupe_id: { type: integer, notnull: true }
    nb_acheter: { type: integer, default: 0 }
    nb_offert: { type: integer, default: 0 }
    new_price: { type: integer, default: null }
    pourcent_article: { type: integer, default: 0 }
    pourcent_commande: { type: integer, default: 0 }
    is_publish: { type: boolean, default: true }
    code: { type: string(20), notnull: false, default: null }
    always_activate: { type: boolean, default: true }
    auto_reduction: { type: boolean, default: true }
    start_date: { type: date }
    end_date: { type: date }
    start_time: { type: time,  }
    end_time: { type: time }
    type: { type: integer }
  relations:
    Groupe: { onDelete: CASCADE, class: GroupeReduction, local: groupe_id, foreign: id }
    Article: { onDelete: CASCADE, class: Article, local: article_id, foreign: id }

