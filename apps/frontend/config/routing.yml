# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url:   /
  param: { module: home, action: index }

# route pour initialiser l'app
get_infos:
  url: /get/infos
  param: { module: webservice, action: getInfos }

commande:
  url: /commande
  param: { module: home, action: index }

inscription:
  url:  /inscription
  param: { module: home, action: inscription}

payment:
  url: /payment
  param: { module: commande, action: payment }

stat:
  url: /stat
  param: { module: stat, action: index }

stat_produit:
  url: /stat/produit
  param: { module: stat, action: produit }

stat_categorie:
  url: /stat/category
  param: { module: stat, action: category }

## listing
gestion_commande:
  url: /gestion/commande
  param: { module: commande, action: listing }

gestion_stock:
  url:  /gestion/stock
  param: { module: element, action: listing }

gestion_element:
  url:  /gestion/element
  param: { module: element, action: listing }

gestion_article:
  url:  /gestion/article
  param: { module: article, action: listing }

gestion_utilisateur:
  url:  /gestion/utilisateur
  param: { module: utilisateur, action: listing }

gestion_sfGuardUser:
  url:  /gestion/utilisateur
  param: { module: utilisateur, action: listing }

test_gestion_article:
  url: /test/gestion/article
  param: { module: article, action: listingTest }

gestion_tools:
  url: /gestion/outils
  param: { module: tools, action: listing }

gestion_floor:
  url: /gestion/floor
  param: { module: floor, action: edit }

gestion_supplement:
  url: /gestion/supplement
  param: { module: tools, action: listing }

gestion_category:
  url: /gestion/category
  param: { module: tools, action: listing }

gestion_fournisseur:
  url: /gestion/fournisseur
  param: { module: tools, action: listing }

gestion_imprimante:
  url: /gestion/imprimante
  param: { module: tools, action: listing }
## fin listing

## ajout
new_utilisateur:
  url: /new/utilisateur
  param: { action: new, module: utilisateur }

## ajout
new_model:
  url: /new/:model
  param: { action: new, module: tools }
## fin ajout

## update

update_utilisateur:
  url: /update/sfGuardRegister/:id
  param: { module: utilisateur, action: update }

update_model:
  url: /update/:model/:id
  param: { action: update, module: tools }
  requirements:
    id: \d+

## fin update

## edit
edit_utilisateur:
  url: /edit/utilisateur/:id
  param: { action: edit, module: utilisateur }
  requirements:
    id: \d+

edit_model:
  url: /edit/:model/:id
  param: { action: edit, module: tools }
  requirements:
    id: \d+


edit_floor:
  url: /edit/floor
  param: { module: floor, action: sap }


## fin edit

## create

create_utilisateur:
  url: /create/sfGuardRegister
  param: { module: utilisateur, action: create }

create_model:
  url: /create/:model
  param: { action: create, module: tools }



## fin create

## supression

delete_utilisateur:
  url: /delete/utilisateur/:id
  param: { action: delete, module: tools, model: sfGuardUser }
  requirements:
    id: \d+

delete_model:
  url: /delete/:model/:id
  param: { action: delete, module: tools }
  requirements:
    id: \d+
## fin supression

##connection et logout

check_login:
  url: /login
  param: { module: sfGuardAuth, action: signin }

sf_guard_signout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

basic_auth:
  url:  /basic_auth
  param: { module: sfGuardAuth, action: HTTPSignin }

facebook_auth:
  url: /facebook_auth
  param: { module: sfGuardAuth, action: facebook }

## gestion des commandes, offrir, archives, imprimer

# affiche les supplements possible pour un article
supplement_article:
  url: /article/supplement/:id
  param: { module: supplement, action: supplement }
  requirements:
    id: \d+

add_commentaire:
  url: /commande/commentaire/:cid
  param: { module: commande, action: commentaire}

get_commandes_table_id:
  url: /get/commande/table_id/:table_id.:sf_format
  param: { module: commande, action: get }
  requirements:
    table_id: \d+
    sf_format: (json)

live_commande:
  url: /live/commande/:type
  param: { module: commande, action: liveJson }

full_live_commande:
  url: /live
  param: { module: commande, action: fullLive }

full_live_commande_json_print:
  url: /live/:id.json
  param: { module: commande, action: fullLiveJson }
  requirements:
    id: \d+

full_live_commande_json:
  url: /live.json
  param: { module: commande, action: fullLiveJson }

get_one_commande:
  url: /get/commande/id/:id.:sf_format
  param: { module: commande, action: getOne }
  requirements:
    id: \d+
    sf_format: (json)

archiver_commande_table_id:
  url: /commande/archiver/:table_id
  param: { module: commande, action: archiver }
  requirements:
    table_id: \d+
    sf_method: [POST]

archiver_commande_id:
  url: /commande/archiver/commande/:id
  param: { module: commande, action: archiver }
  requirements:
    table_id: \d+
    sf_method: [POST]

imprimer_commandes:
  url: /imprimer/commandes
  param: { module: commande, action: imprimerCommandes }
  requirements:
    sf_method: [POST]

imprimer_commande:
  url: /imprimer/commande
  param: { module: commande, action: imprimer }

set_statut_commande:
  url: /set/statut/commande/:id/:statut
  param: { module: commande, action: setStatut }
  requirements:
    id: \d+
    statut: \d+
    sf_method: [POST]

enregistrer_commande:
  url: /save/commande/:table_id
  param: { module: commande, action: new }

modifier_commande:
  url: /modif/commande
  param: { module: commande, action: modif }

javascript:
  url: /js.:sf_format
  param: { module: js, action: index, sf_format: js }

article_element_form:
  url: /article_element_form
  param: { module: article, action: ArticleElement }

category_imprimante_form:
  url: /category_imprimante_form
  param: { module: category, action: CategoryImprimante }
## fin gestion commande
        
#default:
#  url: /:module/:action

#default2:
#  url: /:module/:action/:id

# action pour cloturer la caisse
cloture:
  url: /cloture
  param: { module: commande, action: cloture }




test:
  url: /test
  param: { module: commande, action: test }

test2:
  url: /test2
  param: { module: commande, action: test2 }

websocket:
  url: /websocket
  param: { module: websocket, action: index }

websocketTest:
  url: /websocketTest
  param: { module: websocket, action: test }
## web service
